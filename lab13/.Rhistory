) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(penguins, aes_string(x = input$x, y = input$y, color="species")) +
geom_point(size=input$pointsize, alpha=0.8) +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Penguins"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_depth_mm"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(penguins, aes_string(x = input$x, y = input$y, color="species")) +
geom_point() +
theme_light()
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Penguins"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_depth_mm"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
), # close the first box
box(
plotOutput("plot", width = "500px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(penguins, aes_string(x = input$x, y = input$y, color="species")) +
geom_point(size=input$pointsize, alpha=0.8) +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Wolves"),
dashboardSidebare(disable = T),
dashboardBody(
fluidRow(
box(title = "Population", width = 4,
selectInput("x", "Select Population", choices = c("Alaska Peninsula", "Denali National Park", "central-eastern Alaska", "Yukon-Charley National Preserve", "Ellesmere Island", "North Slave Northwest Territories", "South Slave Northwest Territories", "British Columbia", "southeastern Alaska", "Banff & Jasper National Parks", "Montana", "Yellowstone National Park", "Grand Teton National Park", "Mexican wolves", "Ontario", "Superior National Forest", "the Upper Peninsula of Michigan"), select = "Alaska Peninsula")
),
box(
title = "Wolf Male and Female Populations", width = 7,
plotOutput("plot", width = "700px", height ="600px")
)
)
)
)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Population", width = 4,
selectInput("x", "Select Population", choices = c("Alaska Peninsula", "Denali National Park", "central-eastern Alaska", "Yukon-Charley National Preserve", "Ellesmere Island", "North Slave Northwest Territories", "South Slave Northwest Territories", "British Columbia", "southeastern Alaska", "Banff & Jasper National Parks", "Montana", "Yellowstone National Park", "Grand Teton National Park", "Mexican wolves", "Ontario", "Superior National Forest", "the Upper Peninsula of Michigan"), select = "Alaska Peninsula")
),
box(
title = "Wolf Male and Female Populations", width = 7,
plotOutput("plot", width = "700px", height ="600px")
)
)
)
)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Population", width = 4,
selectInput("x", "Select Population", choices = c("Alaska Peninsula", "Denali National Park", "central-eastern Alaska", "Yukon-Charley National Preserve", "Ellesmere Island", "North Slave Northwest Territories", "South Slave Northwest Territories", "British Columbia", "southeastern Alaska", "Banff & Jasper National Parks", "Montana", "Yellowstone National Park", "Grand Teton National Park", "Mexican wolves", "Ontario", "Superior National Forest", "the Upper Peninsula of Michigan"), select = "Alaska Peninsula")
),
box(
title = "Wolf Male and Female Populations", width = 7,
plotOutput("plot", width = "700px", height ="600px")
)
)
)
)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Population", width = 4,
selectInput("x", "Select Population", choices = c("AK.PEN","BAN.JAS","BC","DENALI","ELLES","GTNP","INT.AK","MEXICAN","MI","MT","N.NWT","ONT","SE.AK","SNF", "SS.NWT","YNP","YUCH"), select = "AK.PEN")
),
box(
title = "Wolf Male and Female Populations", width = 7,
plotOutput("plot", width = "700px", height ="600px")
)
)
)
)
wolves%>%
distinct(pop)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Population", width = 4,
selectInput("x", "Select Population", choices = c("AK.PEN","BAN.JAS","BC","DENALI","ELLES","GTNP","INT.AK","MEXICAN","MI","MT","N.NWT","ONT","SE.AK","SNF", "SS.NWT","YNP","YUCH"), select = "AK.PEN")
),
box(
title = "Wolf Male and Female Populations", width = 7,
plotOutput("plot", width = "700px", height ="600px")
)
)
)
)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Population", width = 4,
selectInput("x", "Select Population", choices = c("AK.PEN","BAN.JAS","BC","DENALI","ELLES","GTNP","INT.AK","MEXICAN","MI","MT","N.NWT","ONT","SE.AK","SNF", "SS.NWT","YNP","YUCH"), select = "AK.PEN")
),
box(
title = "Wolf Male and Female Populations", width = 7,
plotOutput("plot", width = "700px", height ="600px")
)
)
)
)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Population", width = 4,
selectInput("x", "Select Population", choices = c("AK.PEN","BAN.JAS","BC","DENALI","ELLES","GTNP","INT.AK","MEXICAN","MI","MT","N.NWT","ONT","SE.AK","SNF", "SS.NWT","YNP","YUCH"), selected = "AK.PEN")
),
box(
title = "Wolf Male and Female Populations", width = 7,
plotOutput("plot", width = "700px", height ="600px")
)
)
)
)
#can use pipes and reactive functions from dplyr
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves%>%
filter(sex!="NA")%>%
filter(pop==input$x)%>%
ggplot(aes_string(x="sex", y="sex")))+
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Population", width = 4,
selectInput("x", "Select Population", choices = c("AK.PEN","BAN.JAS","BC","DENALI","ELLES","GTNP","INT.AK","MEXICAN","MI","MT","N.NWT","ONT","SE.AK","SNF", "SS.NWT","YNP","YUCH"), selected = "AK.PEN")
),
box(
title = "Wolf Male and Female Populations", width = 7,
plotOutput("plot", width = "700px", height ="600px")
)
)
)
)
#can use pipes and reactive functions from dplyr
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves%>%
filter(sex!="NA")%>%
filter(pop==input$x)%>%
ggplot(aes_string(x="sex", y="sex"))+
geom_bar(position="dodge")
})
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Population", width = 4,
selectInput("x", "Select Population", choices = c("AK.PEN","BAN.JAS","BC","DENALI","ELLES","GTNP","INT.AK","MEXICAN","MI","MT","N.NWT","ONT","SE.AK","SNF", "SS.NWT","YNP","YUCH"), selected = "AK.PEN")
),
box(
title = "Wolf Male and Female Populations", width = 7,
plotOutput("plot", width = "700px", height ="600px")
)
)
)
)
#can use pipes and reactive functions from dplyr
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves%>%
filter(sex!="NA")%>%
filter(pop==input$x)%>%
ggplot(aes_string(x="sex", y="sex"))+
geom_bar(position="dodge")
})
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Population", width = 4,
selectInput("x", "Select Population", choices = c("AK.PEN","BAN.JAS","BC","DENALI","ELLES","GTNP","INT.AK","MEXICAN","MI","MT","N.NWT","ONT","SE.AK","SNF", "SS.NWT","YNP","YUCH"), selected = "AK.PEN")
),
box(
title = "Wolf Male and Female Populations", width = 7,
plotOutput("plot", width = "700px", height ="600px")
)
)
)
)
#can use pipes and reactive functions from dplyr
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves%>%
filter(sex!="NA")%>%
filter(pop=="input$x")%>%
ggplot(aes_string(x="sex", y="sex"))+
geom_bar(position="dodge")
})
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Population", width = 4,
selectInput("x", "Select Population", choices = c("AK.PEN","BAN.JAS","BC","DENALI","ELLES","GTNP","INT.AK","MEXICAN","MI","MT","N.NWT","ONT","SE.AK","SNF", "SS.NWT","YNP","YUCH"), selected = "AK.PEN")
),
box(
title = "Wolf Male and Female Populations", width = 7,
plotOutput("plot", width = "700px", height ="600px")
)
)
)
)
#can use pipes and reactive functions from dplyr
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves%>%
filter(sex!="NA")%>%
filter(pop=="input$x")%>%
ggplot(aes_string(x="sex", y="sex"))+
geom_bar(position="dodge")
})
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Wolves"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Population", width = 4,
selectInput("x", "Select Population", choices = c("AK.PEN","BAN.JAS","BC","DENALI","ELLES","GTNP","INT.AK","MEXICAN","MI","MT","N.NWT","ONT","SE.AK","SNF", "SS.NWT","YNP","YUCH"), selected = "AK.PEN")
),
box(
title = "Wolf Male and Female Populations", width = 7,
plotOutput("plot", width = "700px", height ="600px")
)
)
)
)
#can use pipes and reactive functions from dplyr
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves%>%
filter(sex!="NA")%>%
filter(pop=="input$x")%>%
ggplot(aes_string(x="sex", fill="sex"))+
geom_bar(position="dodge")
})
}
shinyApp(ui, server)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(shiny)
library(shinydashboard)
uc<-readr::read_csv("data/UC_admit.csv")
uc<-readr::read_csv("uc_data/UC_admit.csv")
uc<-readr::read_csv("uc_data/UC_admit.csv")
uc<-readr::read_csv("data/uc_data/UC_admit.csv")
uc<-readr::read_csv("data/uc_data/UC_admit.csv")
uc
uc<-readr::read_csv("data/uc_data/UC_admit.csv")
summary(ucc)
uc<-readr::read_csv("data/uc_data/UC_admit.csv")
summary(uc)
uc<-readr::read_csv("data/uc_data/UC_admit.csv")
summary(uc)
head(uc)
uc<-readr::read_csv("data/uc_data/UC_admit.csv")
summary(uc)
names(uc)
uc%>%
summarize(number_nas = sum(is.na(uc)))
uc%>%
is.na()
tabyl(uc)
tabyl.uc
tabyl_uc
uc %>%
summarise_all(~(sum(is.na(.))))
uc %>%
count(`Perc FR`)
uc %>%
count(`Perc FR`)%>%
arrange(desc())
uc %>%
count(`Perc FR`)%>%
arrange(desc(uc))
uc %>%
count(`Perc FR`)%>%
arrange(desc(`Perc FR`))
uc %>%
count(`Perc FR`)%>%
arrange(`Perc FR`)
uc$Academic_Yr
uc%>%
distinct(Academic_Yr)
uc%>%
distinct(Campus)
uc%>%
distinct(Category)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019", selected = "2019")),
selectInput("y", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz", selected = "Davis")),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees"), selected = "Applicants")
)
box(title = "Admission by Ethnicity Across All UC Campuses", width = 7,
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019", selected = "2019")),
selectInput("y", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz", selected = "Davis")),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees"), selected = "Applicants")
)
box(title = "Admission by Ethnicity Across All UC Campuses", width = 7,
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019", selected = "2019")),
selectInput("y", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz", selected = "Davis")),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees"), selected = "Applicants")
box(title = "Admission by Ethnicity Across All UC Campuses", width = 7,
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019", selected = "2019")),
selectInput("y", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz", selected = "Davis")),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees", selected = "Applicants"))
box(title = "Admission by Ethnicity Across All UC Campuses", width = 7,
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019", selected = "2019")),
selectInput("y", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz", selected = "Davis")),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees", selected = "Applicants"))
box(title = "Admission by Ethnicity Across All UC Campuses", width = 7,
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019", selected = "2019")),
selectInput("y", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz", selected = "Davis")),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees", selected = "Applicants")),
box(title = "Admission by Ethnicity Across All UC Campuses", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
server <- function(input, output, session) {
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019", selected = "2019")),
selectInput("y", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz", selected = "Davis")),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees", selected = "Applicants")),
box(title = "Admission by Ethnicity Across All UC Campuses", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
server <- function(input, output, session) {
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019", selected = "2019")),
selectInput("y", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz", selected = "Davis")),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees", selected = "Applicants")),
box(title = "Admission by Ethnicity Across All UC Campuses", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
server <- function(input, output, session) {
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019", selected = "2019")),
selectInput("y", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz", selected = "Davis")),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees", selected = "Applicants")),
box(title = "Admission by Ethnicity Across All UC Campuses", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
server <- function(input, output, session) {
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019", selected = "2019")),
selectInput("y", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz", selected = "Davis")),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees", selected = "Applicants")),
box(title = "Admission by Ethnicity Across All UC Campuses", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(uc, aes_string(x = input$y, y = input$y, color="Ethnicity")) +
geom_col(size=input$pointsize, alpha=0.8) +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
