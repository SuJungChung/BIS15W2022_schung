caption = ("you can add a caption here, e.g.: Studys show not all birds fly, and not only birds fly")
)
# you can toggle edge size and label (Fly, Bird) colors here
ggVennDiagram(fly_or_bird_list,
set_color = c("black", "blue"),             # sets label colors
category.names = c("Fly", "Bird"),          # sets category label names
label_color = "firebrick",                  # sets overlap-quantity label color
label_size = 4                              # sets overlap-label size
)+
scale_color_brewer(palette = "Set3")+                   # sets palette for circle colors
scale_fill_distiller(palette = "Greys")+                # distiller is for discrete data
labs(title = "Do all birds fly? Do only birds fly?",
caption = ("you can add a caption here, e.g.: Studys show not all birds fly, and not only birds fly") )
#Set Up the vectors:
#you can also recycle the one we made earlier
swimming_vec<- homerange %>%
filter(locomotion=="swimming")%>%
pull(common.name)
carni_vec<- homerange %>%
filter(trophic.guild=="carnivore")%>%
pull(common.name)
aqua_vec <- homerange %>%
filter(realm == "aquatic")%>%
pull(common.name)
ecto_vec<- homerange %>%
filter(thermoregulation =="ectotherm")%>%
pull(common.name)
ggVennDiagram(fly_or_bird_list,
set_color = c("black", "blue"),             # sets label colors
category.names = c("Fly", "Bird"),          # sets category label names
label_color = "firebrick",                  # sets overlap-quantity label color
label_size = 4                              # sets overlap-label size
)+
scale_color_brewer(palette = "Set3")+                   # sets palette for circle colors
scale_fill_distiller(palette = "Greys")+                # distiller is for discrete data
labs(title = "Do all birds fly? Do only birds fly?",
caption = ("you can add a caption here, e.g.: Studys show not all birds fly, and not only birds fly") )
# Make the list of vectors:
tired_list <- list(swimming_vec, carni_vec, aqua_vec, ecto_vec)
# Make the plot:
ggVennDiagram(tired_list,
category.names = c("swimming", "carnivore","aquatic", "ectotherm"),
set_color = c("orange", "red","blue","purple"), label="count")+
scale_fill_distiller(palette ="Purples")+
labs(title = "i am tired")
hr_taxon_count <- homerange %>%
count(taxon)
hr_taxon_count
hr_taxon_count %>%
ggplot(aes(
label = taxon,
size = n,
color = taxon
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 20) +
theme_minimal()
names(homerange)
repfam_count <- homerange %>%
filter(taxon=="lizard" | taxon=="snakes" | taxon=="turtles" | taxon=="tortoises")%>%
count(family)
repfam_count
repfam_count %>%
ggplot(aes(
label = family,
size = n,
color = family)) +
geom_text_wordcloud() +
scale_size_area(max_size = 15)
library(tidyverse)
library(janitor)
library("palmerpenguins")
#install.packages("ggVennDiagram")
library(ggVennDiagram)
library(RColorBrewer)
#install.packages("ggworldcloud")
library(ggwordcloud)
options(scipen=999) #cancels the use of scientific notation for the session
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
beachbugs_long <- readr::read_csv("data/beachbugs_long.csv")
superhero_info
clean_names(supeprhero_info)
clean_names(superhero_info)
superhero_info <- clean_names(superhero_info)
superhero_info <- clean_names(superhero_info)
summary(superhero_info)
superhero_info <- clean_names(superhero_info)
summary(superhero_info)
tabyl(supeprhero_info)
superhero_info <- clean_names(superhero_info)
summary(superhero_info)
tabyl(superhero_info)
superhero_info <- clean_names(superhero_info)
summary(superhero_info)
head(superhero_info)
superhero_info%>%
ggplot(aes(x=alignment, y = height))+
geom_boxplot()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(shiny)
library(shinydashboard)
library(janitor)
remove.packages("shiny", lib="~/R/win-library/4.1")
library(tidyverse)
install.packages("shiny")
library(shiny)
library(shinydashboard)
library(janitor)
install.packages("shiny")
library(tidyverse)
install.packages(shiny)
library(shiny)
library(shinydashboard)
library(janitor)
install.packages("shiny")
library(tidyverse)
#install.packages(shiny)
library(shiny)
library(shinydashboard)
library(janitor)
library(tidyverse)
#install.packages(shiny)
library(shiny)
library(shinydashboard)
library(janitor)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages(shiny)
library(shiny)
library(shinydashboard)
library(janitor)
uc<-readr::read_csv("data/uc_data/UC_admit.csv")
summary(uc)
uc <- clean_names(uc)
uc
uc %>%
summarise_all(~(sum(is.na(.))))
uc%>%
distinct(academic_yr)
uc%>%
distinct(campus)
uc%>%
distinct(category)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019")),
selectInput("y", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees"))),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc%>%
filter(academic_yr=="input$x" & campus =="input$y" & campus =="input$z")%>%
ggplot(aes(x = ethnicity, y = filtered_count_fr)) +
geom_col() +
theme_light(base_size = 18) +
labs(x="Ethnicity",
y="Number of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(tidyverse)
#install.packages(shiny)
library(shiny)
library(shinydashboard)
library(janitor)
library(tidyverse)
install.packages("shiny")
library(shiny)
library(shinydashboard)
library(janitor)
install.packages("shiny")
library(tidyverse)
#install.packages("shiny")
library(shiny)
library(shinydashboard)
library(janitor)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("shiny")
library(shiny)
library(shinydashboard)
library(janitor)
uc<-readr::read_csv("data/uc_data/UC_admit.csv")
summary(uc)
uc <- clean_names(uc)
uc
uc %>%
summarise_all(~(sum(is.na(.))))
uc%>%
distinct(academic_yr)
uc%>%
distinct(campus)
uc%>%
distinct(category)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019")),
selectInput("y", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees"))),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc%>%
filter(academic_yr=="input$x" & campus =="input$y" & campus =="input$z")%>%
ggplot(aes(x = ethnicity, y = filtered_count_fr)) +
geom_col() +
theme_light(base_size = 18) +
labs(x="Ethnicity",
y="Number of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
install.packages(c("glue", "Rcpp", "rlang", "xfun"))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
#install.packages("shiny")
library(shiny)
#library(devtools)
#install_github("andreacirilloac/updateR")
#library(updateR)
#updateR()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
#install.packages("shiny")
library(shiny)
#library(devtools)
#install_github("andreacirilloac/updateR")
#library(updateR)
#updateR()
library(tidyverse)
library(palmerpenguins)
library(shiny)
ui <- fluidPage(
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("shiny")
library(shiny)
library(tidyverse)
install.packages("shiny")
library(shiny)
library(shinydashboard)
library(janitor)
library(tidyverse)
#install.packages("shiny")
library(shiny)
library(shinydashboard)
library(janitor)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("shiny")
library(shiny)
library(shinydashboard)
library(janitor)
uc<-readr::read_csv("data/uc_data/UC_admit.csv")
summary(uc)
uc <- clean_names(uc)
uc
uc %>%
summarise_all(~(sum(is.na(.))))
uc%>%
distinct(academic_yr)
uc%>%
distinct(campus)
uc%>%
distinct(category)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019")),
selectInput("y", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees"))),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc%>%
filter(academic_yr=="input$x" & campus =="input$y" & campus =="input$z")%>%
ggplot(aes(x = ethnicity, y = filtered_count_fr)) +
geom_col() +
theme_light(base_size = 18) +
labs(x="Ethnicity",
y="Number of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
uc%>%
filter(academic_yr=="2011")%>%
filter(campus =="Davis")%>%
filter(category=="Applicants")%>%
ggplot(aes(x = ethnicity, y = filtered_count_fr)) +
geom_col()
uc%>%
distinct(ethnicity)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admission Stats for UC Schools"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("x", "Select Ethnicity", choices = c("International", "Unknown", "White", "Asian", "Chicano/Latino", "American Indian", "African America", "All")),
selectInput("y", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees"))),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc%>%
filter(ethnicity=="input$x" & campus =="input$y" & campus =="input$z")%>%
ggplot(aes(x = academic_yr, y = filtered_count_fr)) +
geom_col() +
theme_light(base_size = 18) +
labs(x="Ethnicity",
y="Number of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admission Stats for UC Schools"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("x", "Select Ethnicity", choices = c("International", "Unknown", "White", "Asian", "Chicano/Latino", "American Indian", "African America", "All")),
selectInput("y", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees"))),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc%>%
filter(ethnicity=="input$x" & campus =="input$y" & campus =="input$z")%>%
ggplot(aes(x = academic_yr, y = filtered_count_fr)) +
geom_col() +
theme_light(base_size = 18) +
labs(x="Year",
y="Number of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019")),
selectInput("y", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees"))),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("shiny")
library(shiny)
library(shinydashboard)
library(janitor)
uc<-readr::read_csv("data/uc_data/UC_admit.csv")
summary(uc)
uc <- clean_names(uc)
uc
uc %>%
summarise_all(~(sum(is.na(.))))
uc%>%
distinct(academic_yr)
uc%>%
distinct(campus)
uc%>%
distinct(category)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019")),
selectInput("y", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees"))),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc%>%
filter(academic_yr=="input$x" & campus =="input$y" & category =="input$z")%>%
ggplot(aes(x = ethnicity, y = filtered_count_fr)) +
geom_col() +
theme_light(base_size = 18) +
labs(x="Ethnicity",
y="Number of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
uc%>%
filter(academic_yr=="2011")%>%
filter(campus =="Davis")%>%
filter(category=="Applicants")%>%
ggplot(aes(x = ethnicity, y = filtered_count_fr)) +
geom_col()
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019")),
selectInput("y", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees"))),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc%>%
filter(academic_yr==input$x & campus ==input$y & category ==input$z)%>%
ggplot(aes(x = ethnicity, y = filtered_count_fr)) +
geom_col() +
theme_light(base_size = 18) +
labs(x="Ethnicity",
y="Number of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admission Stats for UC Schools"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("x", "Select Ethnicity", choices = c("International", "Unknown", "White", "Asian", "Chicano/Latino", "American Indian", "African America", "All")),
selectInput("y", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("z", "Select Category", choices = c("Applicants", "Admits", "Enrollees"))),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc%>%
filter(ethnicity==input$x & campus == input$y & category ==input$z)%>%
ggplot(aes(x = academic_yr, y = filtered_count_fr)) +
geom_col() +
theme_light(base_size = 18) +
labs(x="Year",
y="Number of Individuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
