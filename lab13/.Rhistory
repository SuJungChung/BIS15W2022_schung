uc%>%
filter(Academic_Yr==input$year)%>%
ggplot(uc, aes_string(x = input$campus, y = input$category, color="Ethnicity")) +
geom_bar(position="dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("year", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019")),
selectInput("campus", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("category", "Select Category", choices = c("Applicants", "Admits", "Enrollees")),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc%>%
filter(Academic_Yr==input$year)%>%
ggplot(uc, aes_string(x = input$campus, y = input$category, color="Ethnicity")) +
geom_bar(position="dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("year", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019")),
selectInput("campus", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("category", "Select Category", choices = c("Applicants", "Admits", "Enrollees")),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc%>%
filter(Academic_Yr==input$year)%>%
ggplot(uc, aes(x = input$campus, y = input$category, color="Ethnicity")) +
geom_bar(position="dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("year", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019")),
selectInput("campus", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("category", "Select Category", choices = c("Applicants", "Admits", "Enrollees")),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc%>%
filter(Academic_Yr==input$year)%>%
ggplot(uc, aes_(x = input$campus, y = input$category, color="Ethnicity")) +
geom_bar(position="dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("year", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019")),
selectInput("campus", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("category", "Select Category", choices = c("Applicants", "Admits", "Enrollees")),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc%>%
filter(Academic_Yr==input$year)%>%
ggplot(uc, aes_string(x = input$campus, y = input$category, color="Ethnicity")) +
geom_bar(position="dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("year", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019")),
selectInput("campus", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("category", "Select Category", choices = c("Applicants", "Admits", "Enrollees")),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc%>%
filter(Academic_Yr==input$year)%>%
ggplot(uc, aes_string(x = input$campus, y = input$category, color="Ethnicity")) +
geom_bar(position="dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("year", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019")),
selectInput("campus", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("category", "Select Category", choices = c("Applicants", "Admits", "Enrollees")),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc%>%
filter(Academic_Yr==input$year)%>%
ggplot(uc, aes_string(x = input$campus, y = input$year, color="Ethnicity")) +
geom_bar(position="dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("year", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019")),
selectInput("campus", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("category", "Select Category", choices = c("Applicants", "Admits", "Enrollees")),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(uc, aes_string(x = input$campus, y = input$year, color="Ethnicity")) +
geom_bar(position="dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("year", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019")),
selectInput("campus", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("category", "Select Category", choices = c("Applicants", "Admits", "Enrollees")),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc%>%
filter(Academic_Yr==input$year)%>%
ggplot(uc, aes_string(x = input$campus, y = input$count(category), color="Ethnicity")) +
geom_bar(position="dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("year", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019")),
selectInput("campus", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("category", "Select Category", choices = c("Applicants", "Admits", "Enrollees")),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(uc, aes_string(x = input$campus, y = input$count(category), color="Ethnicity")) +
geom_bar(position="dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("year", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019")),
selectInput("campus", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("category", "Select Category", choices = c("Applicants", "Admits", "Enrollees")),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(uc, aes_string(x = input$campus, y = input$category, color="Ethnicity")) +
geom_bar(position="dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("year", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019")),
selectInput("campus", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("category", "Select Category", choices = c("Applicants", "Admits", "Enrollees")),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc%>%
filter(Academic_Yr==input$year)%>%
ggplot(uc, aes_string(x = input$campus, y = input$category, color="Ethnicity")) +
geom_bar(position="dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("year", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019")),
selectInput("campus", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("category", "Select Category", choices = c("Applicants", "Admits", "Enrollees")),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc%>%
filter(Academic_Yr==input$year)
ggplot(uc, aes_string(x = input$campus, y = input$category, color="Ethnicity")) +
geom_bar(position="dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("year", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019")),
selectInput("campus", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("category", "Select Category", choices = c("Applicants", "Admits", "Enrollees")),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc%>%
filter(Academic_Yr=="input$year")
ggplot(uc, aes_string(x = input$campus, y = input$category, color="Ethnicity")) +
geom_bar(position="dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("year", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019")),
selectInput("campus", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("category", "Select Category", choices = c("Applicants", "Admits", "Enrollees")),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc%>%
filter(Academic_Yr=="input$year")%>%
ggplot(uc, aes_string(x = input$campus, y = input$category, color="Ethnicity")) +
geom_bar(position="dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("year", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019")),
selectInput("campus", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("category", "Select Category", choices = c("Applicants", "Admits", "Enrollees")),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc%>%
filter(Academic_Yr=="input$year")%>%
ggplot(aes_string(x = input$campus, y = input$category, color="Ethnicity")) +
geom_bar(position="dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("year", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019")),
selectInput("campus", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("category", "Select Category", choices = c("Applicants", "Admits", "Enrollees")),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc%>%
filter(Academic_Yr=="input$year")%>%
ggplot(aes_string(x = "input$campus", y = "input$category", color="Ethnicity")) +
geom_bar(position="dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("year", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019")),
selectInput("campus", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("category", "Select Category", choices = c("Applicants", "Admits", "Enrollees")),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc%>%
filter(Academic_Yr=="input$year")%>%
ggplot(aes_string(x = "input$campus", y = "input$category")) +
geom_bar(position="dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title ="Admissions across all UC campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Interactive Variables", width = 4,
selectInput("year", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014" , "2015", "2016", "2017", "2018", "2019")),
selectInput("campus", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara", "Santa_Cruz")),
selectInput("category", "Select Category", choices = c("Applicants", "Admits", "Enrollees")),
box(title = "Admission by Ethnicity", width = 7,
plotOutput("plot", width ="700px", height ="800px"))
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc%>%
filter(Academic_Yr=="input$year")%>%
ggplot(aes_string(x = "input$campus", y = "input$category", fill="Ethnicity")) +
geom_bar(position="dodge") +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
uc_wide<-pivot_wider(names_from = "Category", #the observations under key will become new columns
values_from = "FilteredCountFR")
uc
uc%>%
as.factor(Category)
uc%>%
as.factor(Category)
tb_data <- read_csv("data/tb_data.csv")
tb_data # two different things in the key variable, so you need to organize it
install.packages("glue")
uc_wide<-pivot_wider(names_from = "Category", #the observations under key will become new columns
values_from = "FilteredCountFR")
uc_wide<-pivot_wider(names_from = "Category", #the observations under key will become new columns
values_from = "FilteredCountFR")
uc_wide<-pivot_wider(names_from = "Category",
values_from = "FilteredCountFR")
uc_wide<-uc%>%
pivot_wider(names_from = "Category",
values_from = "FilteredCountFR")
uc_wide<-uc%>%
pivot_wider(names_from = "Category",
values_from = "FilteredCountFR")
uc_wide
